@model List<WebApplication1.ViewModel.DepartmentViewModel>

    <link href="./css/dashboard.css" rel="stylesheet" />


<div>
    <div class="d-flex  gap-5">
        <div class="w-100 mb-3">
            <div class="card shadow-sm border-light rounded">
                <div class="card-body d-flex align-items-center justify-content-between">
                    <div class="me-3">
                        <span class="dash-widget-icon text-primary">
                            <i class="fa fa-user fa-2x"></i>
                        </span>
                    </div>
                    <div>
                        <h3 class="mb-0">@(ViewBag.EmployeeCount > 0 ? ViewBag.EmployeeCount : "there is no Employees")</h3>
                        <span class="fw-bold">Employees</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="w-100 mb-3">
            <div class="card shadow-sm border-light rounded">
                <div class="card-body d-flex justify-content-between">
                    <div class="me-3 align-content-center">
                        <span class="dash-widget-icon text-primary">
                            <svg xmlns="http://www.w3.org/2000/svg" width="35" height="35" fill="currentColor" class="bi bi-border-all" viewBox="0 0 16 16">
                                <path d="M0 0h16v16H0zm1 1v6.5h6.5V1zm7.5 0v6.5H15V1zM15 8.5H8.5V15H15zM7.5 15V8.5H1V15z" />
                            </svg>
                        </span>
                    </div>
                    <div class="h-100 align-content-center">
                        <h3 class="mb-0">@(ViewBag.DepartmentCount > 0 ? ViewBag.DepartmentCount : "there is no Departments")</h3>
                        <span class="fw-bold">Departments</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="w-100 mb-3">
            <div class="card shadow-sm border-light rounded">
                <div class="card-body d-flex justify-content-between">
                    <div class="me-3 align-content-center">
                        <span class="dash-widget-icon text-primary">
                            <svg xmlns="http://www.w3.org/2000/svg" width="35" height="36" fill="currentColor" class="bi bi-bookmark-fill" viewBox="0 0 16 16">
                                <path d="M2 2v13.5a.5.5 0 0 0 .74.439L8 13.069l5.26 2.87A.5.5 0 0 0 14 15.5V2a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2" />
                            </svg>
                        </span>
                    </div>
                    <div class="h-100 align-content-center">
                        <h3 class="mb-0">@(ViewBag.PositionCount > 0 ? ViewBag.PositionCount : "there is no Postions")</h3>
                        <span class="fw-bold">Position</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    


    <div class="card mb-4 z-index-2 draggable  d-flex flex-column justify-content-center align-content-center align-items-center department-chart" >
        <div class="card-header pb-0 w-100">
            <h6 class="mb-1">Department Distribution</h6>
        </div>
        <div class="card-body card-body px-3 pt-lg-6 pb-lg-5">
            <div class="row h-100">
                <div class="col-lg-5 my-auto text-center d-lg-block d-flex justify-content-center">
                    <div id="chart-pie" class="chart-pie">
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@{
    // Convert the Model data into JavaScript-friendly format
    var departmentNames = Model.Select(d => d.Name).ToArray();
    var employeeCounts = Model.Select(d => d.EmployeeCount).ToArray();
}

@{
    // Method to generate random colors
    Random random = new Random();
    Func<string> getRandomColor = () =>
    {
        return String.Format("#{0:X6}", random.Next(0x1000000));  // Random Hex color
    };

    // Generate a color for each department
    var colors = Model.Select(d => getRandomColor()).ToArray();
}


@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <script>
        // Pass C# data to JavaScript
        var departmentNames = @Html.Raw(Json.Serialize(departmentNames));
        var employeeCounts = @Html.Raw(Json.Serialize(employeeCounts));
        var colors = @Html.Raw(Json.Serialize(colors));  // New: Pass colors to JS
        console.log(departmentNames)
        console.log(employeeCounts)
        var ctx = document.getElementById("chart-pie");

        var chartPie = new ApexCharts(ctx, {
            chart: {
                width: 380,
                type: 'donut',
            },
            dataLabels: {
                enabled: false
            },
            plotOptions: {
                pie: {
                    customScale: 1,
                    expandOnClick: false,
                    donut: {
                        size: "80%",
                    }
                },
            },
            legend: {
                position: "right",
                verticalAlign: "center",
                containerMargin: {
                    left: 35,
                    right: 60
                }
            },
            series: employeeCounts,  // Use dynamic data for series
            labels: departmentNames, // Use dynamic data for labels
            colors: colors,
            responsive: [
                {
                    breakpoint: 1550,
                    options: {
                        chart: {
                            width: 340,
                        },
                        legend: {
                            position: "bottom",
                            verticalAlign: "bottom",
                            containerMargin: {
                                left: 'auto',
                                right: 'auto'
                            }
                        },
                    }
                },
                {
                    breakpoint: 1450,
                    options: {
                        chart: {
                            width: 300,
                        },
                    }
                }
            ]
        });

        chartPie.render();
    </script>
}